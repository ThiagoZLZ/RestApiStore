# name: Python application

# on: [push]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: [3.13]
#         poetry-version: [1.8.3]  # versão mais recente e estável *

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install Poetry ${{ matrix.poetry-version }}
#         run: |
#           python -m pip install --upgrade pip
#           pip install poetry==${{ matrix.poetry-version }}
#           poetry --version

#       - name: Install dependencies
#         run: |
#           poetry install

#       - name: Run tests
#         run: |
#           poetry run python manage.py test

# sdsdsdsd

name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]  # Versão do Python
        poetry-version: [1.8.3] # Versão do Poetry (opcional, se quiser fixar)

    steps:
      # 1. Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 3. Instalar Poetry
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==${{ matrix.poetry-version }}
          poetry --version

      ## 4. Limpar cache do Poetry (opcional, evita erros de virtualenv)
      - name: Clear Poetry cache
        run: rm -rf ~/.cache/pypoetry

      # 5. Instalar dependências do projeto
      - name: Install dependencies
        run: poetry install

      # 6. Rodar testes
      - name: Run tests
        run: poetry run python manage.py test


